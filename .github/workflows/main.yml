
# This workflow will install Python dependencies, lint using Black, run tests using Pytest 
name: rego_builder github workflow

on: 
  #Trigger the workflow on a push/pull_requests event to the main branch only
  push: 
    branches: [main]
  pull_request:
    branches: [main]

# A workflow job running sequentially
jobs:
  build:
    # runs-on: defines The workflow runner
    runs-on: ubuntu-latest 
    # steps: defines a series of tasks executed by the Job
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: rscheele3214
          password: f2dee634-babc-492b-9583-32fe86f3c569

      - name: Set up Python
        uses: actions/setup-python@v2.3.0
        
        with:
          python-version: "3.10"

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.1.12-0

      - name: Install poetry for dependency management
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true


      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      # - run: pip install --upgrade pip
      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      # Now install _your_ project. This isn't necessary for many types of projects -- particularly
      # things like Django apps don't need this. But it's a good idea since it fully-exercises the
      # pyproject.toml and makes that if you add things like console-scripts at some point that
      # they'll be installed and working.
      - run: poetry install --no-interaction

      # And finally run tests. I'm using pytest and all my pytest config is in my `pyproject.toml`
      # so this line is super-simple. But it could be as complex as you need.
      - run: poetry run pytest .
      - run: poetry run black .

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: rscheele3214/rego_builder:latest


    